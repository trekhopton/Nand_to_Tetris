<class>
    <keyword>class</keyword>
    <className>
        <identifier>Ball</identifier>
    </className>
    <symbol>{</symbol>
    <classVarDec>
        <keyword>field</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <varName>
            <identifier>x,int,this,0</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>y,int,this,1</identifier>
        </varName>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <varName>
            <identifier>lengthx,int,this,2</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>lengthy,int,this,3</identifier>
        </varName>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <varName>
            <identifier>d,int,this,4</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>straightD,int,this,5</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>diagonalD,int,this,6</identifier>
        </varName>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <type>
            <keyword>boolean</keyword>
        </type>
        <varName>
            <identifier>invert,boolean,this,7</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>positivex,boolean,this,8</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>positivey,boolean,this,9</identifier>
        </varName>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <varName>
            <identifier>leftWall,int,this,10</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>rightWall,int,this,11</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>topWall,int,this,12</identifier>
        </varName>
        <symbol>,</symbol>
        <varName>
            <identifier>bottomWall,int,this,13</identifier>
        </varName>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <varName>
            <identifier>wall,int,this,14</identifier>
        </varName>
        <symbol>;</symbol>
    </classVarDec>
    <subroutineDec>
        <keyword>constructor</keyword>
        <subroutineName>
            <identifier>new</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>Ax,int,argument,0</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>Ay,int,argument,1</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>AleftWall,int,argument,2</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>ArightWall,int,argument,3</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>AtopWall,int,argument,4</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>AbottomWall,int,argument,5</identifier>
            </varName>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>x,int,this,0</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>Ax,int,argument,0</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>y,int,this,1</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>Ay,int,argument,1</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>leftWall,int,this,10</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>AleftWall,int,argument,2</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>rightWall,int,this,11</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>ArightWall,int,argument,3</identifier>
                                </varName>
                            </term>
                            <symbol>-</symbol>
                            <term>
                                <integerConstant>6</integerConstant>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>topWall,int,this,12</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>AtopWall,int,argument,4</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>bottomWall,int,this,13</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>AbottomWall,int,argument,5</identifier>
                                </varName>
                            </term>
                            <symbol>-</symbol>
                            <term>
                                <integerConstant>6</integerConstant>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>wall,int,this,14</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <integerConstant>0</integerConstant>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <subroutineName>
                            <identifier>show</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <expression>
                            <term>
                                <keyword>this</keyword>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>dispose</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <className>
                            <identifier>Memory</identifier>
                        </className>
                        <symbol>.</symbol>
                        <subroutineName>
                            <identifier>deAlloc</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <keyword>this</keyword>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>show</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <className>
                            <identifier>Screen</identifier>
                        </className>
                        <symbol>.</symbol>
                        <subroutineName>
                            <identifier>setColor</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <keyword>true</keyword>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <subroutineName>
                            <identifier>draw</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>hide</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <className>
                            <identifier>Screen</identifier>
                        </className>
                        <symbol>.</symbol>
                        <subroutineName>
                            <identifier>setColor</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <keyword>false</keyword>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <subroutineName>
                            <identifier>draw</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>draw</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <className>
                            <identifier>Screen</identifier>
                        </className>
                        <symbol>.</symbol>
                        <subroutineName>
                            <identifier>drawRectangle</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>x,int,this,0</identifier>
                                    </varName>
                                </term>
                            </expression>
                            <symbol>,</symbol>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>y,int,this,1</identifier>
                                    </varName>
                                </term>
                            </expression>
                            <symbol>,</symbol>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>x,int,this,0</identifier>
                                    </varName>
                                </term>
                                <symbol>+</symbol>
                                <term>
                                    <integerConstant>5</integerConstant>
                                </term>
                            </expression>
                            <symbol>,</symbol>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>y,int,this,1</identifier>
                                    </varName>
                                </term>
                                <symbol>+</symbol>
                                <term>
                                    <integerConstant>5</integerConstant>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <subroutineName>
            <identifier>getLeft</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>x,int,this,0</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <subroutineName>
            <identifier>getRight</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>x,int,this,0</identifier>
                                </varName>
                            </term>
                            <symbol>+</symbol>
                            <term>
                                <integerConstant>5</integerConstant>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>setDestination</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>destx,int,argument,1</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>desty,int,argument,2</identifier>
            </varName>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <type>
                    <keyword>int</keyword>
                </type>
                <varName>
                    <identifier>dx,int,local,0</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>dy,int,local,1</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>temp,int,local,2</identifier>
                </varName>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>lengthx,int,this,2</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>destx,int,argument,1</identifier>
                                </varName>
                            </term>
                            <symbol>-</symbol>
                            <term>
                                <varName>
                                    <identifier>x,int,this,0</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>lengthy,int,this,3</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>desty,int,argument,2</identifier>
                                </varName>
                            </term>
                            <symbol>-</symbol>
                            <term>
                                <varName>
                                    <identifier>y,int,this,1</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>dx,int,local,0</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <className>
                                    <identifier>Math</identifier>
                                </className>
                                <symbol>.</symbol>
                                <subroutineName>
                                    <identifier>abs</identifier>
                                </subroutineName>
                                <symbol>(</symbol>
                                <expressionList>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>lengthx,int,this,2</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                </expressionList>
                                <symbol>)</symbol>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>dy,int,local,1</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <className>
                                    <identifier>Math</identifier>
                                </className>
                                <symbol>.</symbol>
                                <subroutineName>
                                    <identifier>abs</identifier>
                                </subroutineName>
                                <symbol>(</symbol>
                                <expressionList>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>lengthy,int,this,3</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                </expressionList>
                                <symbol>)</symbol>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>invert,boolean,this,7</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <symbol>(</symbol>
                                <expression>
                                    <term>
                                        <varName>
                                            <identifier>dx,int,local,0</identifier>
                                        </varName>
                                    </term>
                                    <symbol>&lt;</symbol>
                                    <term>
                                        <varName>
                                            <identifier>dy,int,local,1</identifier>
                                        </varName>
                                    </term>
                                </expression>
                                <symbol>)</symbol>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>invert,boolean,this,7</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>temp,int,local,2</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>dx,int,local,0</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>dx,int,local,0</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>dy,int,local,1</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>dy,int,local,1</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>temp,int,local,2</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>positivex,boolean,this,8</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <varName>
                                                        <identifier>y,int,this,1</identifier>
                                                    </varName>
                                                </term>
                                                <symbol>&lt;</symbol>
                                                <term>
                                                    <varName>
                                                        <identifier>desty,int,argument,2</identifier>
                                                    </varName>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>positivey,boolean,this,9</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <varName>
                                                        <identifier>x,int,this,0</identifier>
                                                    </varName>
                                                </term>
                                                <symbol>&lt;</symbol>
                                                <term>
                                                    <varName>
                                                        <identifier>destx,int,argument,1</identifier>
                                                    </varName>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                        <keyword>else</keyword>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>positivex,boolean,this,8</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <varName>
                                                        <identifier>x,int,this,0</identifier>
                                                    </varName>
                                                </term>
                                                <symbol>&lt;</symbol>
                                                <term>
                                                    <varName>
                                                        <identifier>destx,int,argument,1</identifier>
                                                    </varName>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>positivey,boolean,this,9</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <varName>
                                                        <identifier>y,int,this,1</identifier>
                                                    </varName>
                                                </term>
                                                <symbol>&lt;</symbol>
                                                <term>
                                                    <varName>
                                                        <identifier>desty,int,argument,2</identifier>
                                                    </varName>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>d,int,this,4</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <symbol>(</symbol>
                                <expression>
                                    <term>
                                        <integerConstant>2</integerConstant>
                                    </term>
                                    <symbol>*</symbol>
                                    <term>
                                        <varName>
                                            <identifier>dy,int,local,1</identifier>
                                        </varName>
                                    </term>
                                </expression>
                                <symbol>)</symbol>
                            </term>
                            <symbol>-</symbol>
                            <term>
                                <varName>
                                    <identifier>dx,int,local,0</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>straightD,int,this,5</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <integerConstant>2</integerConstant>
                            </term>
                            <symbol>*</symbol>
                            <term>
                                <varName>
                                    <identifier>dy,int,local,1</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>diagonalD,int,this,6</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <integerConstant>2</integerConstant>
                            </term>
                            <symbol>*</symbol>
                            <term>
                                <symbol>(</symbol>
                                <expression>
                                    <term>
                                        <varName>
                                            <identifier>dy,int,local,1</identifier>
                                        </varName>
                                    </term>
                                    <symbol>-</symbol>
                                    <term>
                                        <varName>
                                            <identifier>dx,int,local,0</identifier>
                                        </varName>
                                    </term>
                                </expression>
                                <symbol>)</symbol>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <subroutineName>
            <identifier>move</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <subroutineName>
                            <identifier>hide</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>d,int,this,4</identifier>
                                </varName>
                            </term>
                            <symbol>&lt;</symbol>
                            <term>
                                <integerConstant>0</integerConstant>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>d,int,this,4</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>d,int,this,4</identifier>
                                            </varName>
                                        </term>
                                        <symbol>+</symbol>
                                        <term>
                                            <varName>
                                                <identifier>straightD,int,this,5</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                        <keyword>else</keyword>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>d,int,this,4</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>d,int,this,4</identifier>
                                            </varName>
                                        </term>
                                        <symbol>+</symbol>
                                        <term>
                                            <varName>
                                                <identifier>diagonalD,int,this,6</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <ifStatement>
                                    <keyword>if</keyword>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>positivey,boolean,this,9</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <ifStatement>
                                                <keyword>if</keyword>
                                                <symbol>(</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>invert,boolean,this,7</identifier>
                                                        </varName>
                                                    </term>
                                                </expression>
                                                <symbol>)</symbol>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>x,int,this,0</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>x,int,this,0</identifier>
                                                                    </varName>
                                                                </term>
                                                                <symbol>+</symbol>
                                                                <term>
                                                                    <integerConstant>4</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                                <keyword>else</keyword>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>y,int,this,1</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>y,int,this,1</identifier>
                                                                    </varName>
                                                                </term>
                                                                <symbol>+</symbol>
                                                                <term>
                                                                    <integerConstant>4</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                            </ifStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                    <keyword>else</keyword>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <ifStatement>
                                                <keyword>if</keyword>
                                                <symbol>(</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>invert,boolean,this,7</identifier>
                                                        </varName>
                                                    </term>
                                                </expression>
                                                <symbol>)</symbol>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>x,int,this,0</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>x,int,this,0</identifier>
                                                                    </varName>
                                                                </term>
                                                                <symbol>-</symbol>
                                                                <term>
                                                                    <integerConstant>4</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                                <keyword>else</keyword>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>y,int,this,1</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>y,int,this,1</identifier>
                                                                    </varName>
                                                                </term>
                                                                <symbol>-</symbol>
                                                                <term>
                                                                    <integerConstant>4</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                            </ifStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                </ifStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>positivex,boolean,this,8</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <ifStatement>
                                    <keyword>if</keyword>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>invert,boolean,this,7</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>y,int,this,1</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>y,int,this,1</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>+</symbol>
                                                    <term>
                                                        <integerConstant>4</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                    <keyword>else</keyword>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>x,int,this,0</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>x,int,this,0</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>+</symbol>
                                                    <term>
                                                        <integerConstant>4</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                </ifStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                        <keyword>else</keyword>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <ifStatement>
                                    <keyword>if</keyword>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>invert,boolean,this,7</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>y,int,this,1</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>y,int,this,1</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>-</symbol>
                                                    <term>
                                                        <integerConstant>4</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                    <keyword>else</keyword>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>x,int,this,0</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>x,int,this,0</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>-</symbol>
                                                    <term>
                                                        <integerConstant>4</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                </ifStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <symbol>~</symbol>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>x,int,this,0</identifier>
                                            </varName>
                                        </term>
                                        <symbol>&gt;</symbol>
                                        <term>
                                            <varName>
                                                <identifier>leftWall,int,this,10</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>wall,int,this,14</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <integerConstant>1</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>x,int,this,0</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>leftWall,int,this,10</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <symbol>~</symbol>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>x,int,this,0</identifier>
                                            </varName>
                                        </term>
                                        <symbol>&lt;</symbol>
                                        <term>
                                            <varName>
                                                <identifier>rightWall,int,this,11</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>wall,int,this,14</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <integerConstant>2</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>x,int,this,0</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>rightWall,int,this,11</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <symbol>~</symbol>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>y,int,this,1</identifier>
                                            </varName>
                                        </term>
                                        <symbol>&gt;</symbol>
                                        <term>
                                            <varName>
                                                <identifier>topWall,int,this,12</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>wall,int,this,14</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <integerConstant>3</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>y,int,this,1</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>topWall,int,this,12</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <symbol>~</symbol>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>y,int,this,1</identifier>
                                            </varName>
                                        </term>
                                        <symbol>&lt;</symbol>
                                        <term>
                                            <varName>
                                                <identifier>bottomWall,int,this,13</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>wall,int,this,14</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <integerConstant>4</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>y,int,this,1</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>bottomWall,int,this,13</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <subroutineName>
                            <identifier>show</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>wall,int,this,14</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>bounce</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>bouncingDirection,int,argument,1</identifier>
            </varName>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <type>
                    <keyword>int</keyword>
                </type>
                <varName>
                    <identifier>newx,int,local,0</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>newy,int,local,1</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>divLengthx,int,local,2</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>divLengthy,int,local,3</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>factor,int,local,4</identifier>
                </varName>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>divLengthx,int,local,2</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>lengthx,int,this,2</identifier>
                                </varName>
                            </term>
                            <symbol>/</symbol>
                            <term>
                                <integerConstant>10</integerConstant>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>divLengthy,int,local,3</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>lengthy,int,this,3</identifier>
                                </varName>
                            </term>
                            <symbol>/</symbol>
                            <term>
                                <integerConstant>10</integerConstant>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>bouncingDirection,int,argument,1</identifier>
                                </varName>
                            </term>
                            <symbol>=</symbol>
                            <term>
                                <integerConstant>0</integerConstant>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>factor,int,local,4</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <integerConstant>10</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                        <keyword>else</keyword>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <ifStatement>
                                    <keyword>if</keyword>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <symbol>(</symbol>
                                                    <expression>
                                                        <term>
                                                            <symbol>~</symbol>
                                                            <term>
                                                                <symbol>(</symbol>
                                                                <expression>
                                                                    <term>
                                                                        <varName>
                                                                            <identifier>lengthx,int,this,2</identifier>
                                                                        </varName>
                                                                    </term>
                                                                    <symbol>&lt;</symbol>
                                                                    <term>
                                                                        <integerConstant>0</integerConstant>
                                                                    </term>
                                                                </expression>
                                                                <symbol>)</symbol>
                                                            </term>
                                                        </term>
                                                    </expression>
                                                    <symbol>)</symbol>
                                                </term>
                                                <symbol>&amp;</symbol>
                                                <term>
                                                    <symbol>(</symbol>
                                                    <expression>
                                                        <term>
                                                            <varName>
                                                                <identifier>bouncingDirection,int,argument,1</identifier>
                                                            </varName>
                                                        </term>
                                                        <symbol>=</symbol>
                                                        <term>
                                                            <integerConstant>1</integerConstant>
                                                        </term>
                                                    </expression>
                                                    <symbol>)</symbol>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                        <symbol>|</symbol>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <symbol>(</symbol>
                                                    <expression>
                                                        <term>
                                                            <varName>
                                                                <identifier>lengthx,int,this,2</identifier>
                                                            </varName>
                                                        </term>
                                                        <symbol>&lt;</symbol>
                                                        <term>
                                                            <integerConstant>0</integerConstant>
                                                        </term>
                                                    </expression>
                                                    <symbol>)</symbol>
                                                </term>
                                                <symbol>&amp;</symbol>
                                                <term>
                                                    <symbol>(</symbol>
                                                    <expression>
                                                        <term>
                                                            <varName>
                                                                <identifier>bouncingDirection,int,argument,1</identifier>
                                                            </varName>
                                                        </term>
                                                        <symbol>=</symbol>
                                                        <term>
                                                            <symbol>(</symbol>
                                                            <expression>
                                                                <term>
                                                                    <symbol>-</symbol>
                                                                    <term>
                                                                        <integerConstant>1</integerConstant>
                                                                    </term>
                                                                </term>
                                                            </expression>
                                                            <symbol>)</symbol>
                                                        </term>
                                                    </expression>
                                                    <symbol>)</symbol>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>factor,int,local,4</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <integerConstant>20</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                    <keyword>else</keyword>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>factor,int,local,4</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <integerConstant>5</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                </ifStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>wall,int,this,14</identifier>
                                </varName>
                            </term>
                            <symbol>=</symbol>
                            <term>
                                <integerConstant>1</integerConstant>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>newx,int,local,0</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <integerConstant>506</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>newy,int,local,1</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <varName>
                                                        <identifier>divLengthy,int,local,3</identifier>
                                                    </varName>
                                                </term>
                                                <symbol>*</symbol>
                                                <term>
                                                    <symbol>(</symbol>
                                                    <expression>
                                                        <term>
                                                            <symbol>-</symbol>
                                                            <term>
                                                                <integerConstant>50</integerConstant>
                                                            </term>
                                                        </term>
                                                    </expression>
                                                    <symbol>)</symbol>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                        <symbol>/</symbol>
                                        <term>
                                            <varName>
                                                <identifier>divLengthx,int,local,2</identifier>
                                            </varName>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>newy,int,local,1</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>y,int,this,1</identifier>
                                            </varName>
                                        </term>
                                        <symbol>+</symbol>
                                        <term>
                                            <symbol>(</symbol>
                                            <expression>
                                                <term>
                                                    <varName>
                                                        <identifier>newy,int,local,1</identifier>
                                                    </varName>
                                                </term>
                                                <symbol>*</symbol>
                                                <term>
                                                    <varName>
                                                        <identifier>factor,int,local,4</identifier>
                                                    </varName>
                                                </term>
                                            </expression>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                        <keyword>else</keyword>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <ifStatement>
                                    <keyword>if</keyword>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>wall,int,this,14</identifier>
                                            </varName>
                                        </term>
                                        <symbol>=</symbol>
                                        <term>
                                            <integerConstant>2</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>newx,int,local,0</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <integerConstant>0</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>newy,int,local,1</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <symbol>(</symbol>
                                                        <expression>
                                                            <term>
                                                                <varName>
                                                                    <identifier>divLengthy,int,local,3</identifier>
                                                                </varName>
                                                            </term>
                                                            <symbol>*</symbol>
                                                            <term>
                                                                <integerConstant>50</integerConstant>
                                                            </term>
                                                        </expression>
                                                        <symbol>)</symbol>
                                                    </term>
                                                    <symbol>/</symbol>
                                                    <term>
                                                        <varName>
                                                            <identifier>divLengthx,int,local,2</identifier>
                                                        </varName>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>newy,int,local,1</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>y,int,this,1</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>+</symbol>
                                                    <term>
                                                        <symbol>(</symbol>
                                                        <expression>
                                                            <term>
                                                                <varName>
                                                                    <identifier>newy,int,local,1</identifier>
                                                                </varName>
                                                            </term>
                                                            <symbol>*</symbol>
                                                            <term>
                                                                <varName>
                                                                    <identifier>factor,int,local,4</identifier>
                                                                </varName>
                                                            </term>
                                                        </expression>
                                                        <symbol>)</symbol>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                    <keyword>else</keyword>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <ifStatement>
                                                <keyword>if</keyword>
                                                <symbol>(</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>wall,int,this,14</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>=</symbol>
                                                    <term>
                                                        <integerConstant>3</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>)</symbol>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>newy,int,local,1</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <integerConstant>250</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>newx,int,local,0</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <symbol>(</symbol>
                                                                    <expression>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>divLengthx,int,local,2</identifier>
                                                                            </varName>
                                                                        </term>
                                                                        <symbol>*</symbol>
                                                                        <term>
                                                                            <symbol>(</symbol>
                                                                            <expression>
                                                                                <term>
                                                                                    <symbol>-</symbol>
                                                                                    <term>
                                                                                        <integerConstant>25</integerConstant>
                                                                                    </term>
                                                                                </term>
                                                                            </expression>
                                                                            <symbol>)</symbol>
                                                                        </term>
                                                                    </expression>
                                                                    <symbol>)</symbol>
                                                                </term>
                                                                <symbol>/</symbol>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>divLengthy,int,local,3</identifier>
                                                                    </varName>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>newx,int,local,0</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>x,int,this,0</identifier>
                                                                    </varName>
                                                                </term>
                                                                <symbol>+</symbol>
                                                                <term>
                                                                    <symbol>(</symbol>
                                                                    <expression>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>newx,int,local,0</identifier>
                                                                            </varName>
                                                                        </term>
                                                                        <symbol>*</symbol>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>factor,int,local,4</identifier>
                                                                            </varName>
                                                                        </term>
                                                                    </expression>
                                                                    <symbol>)</symbol>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                                <keyword>else</keyword>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>newy,int,local,1</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <integerConstant>0</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>newx,int,local,0</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <symbol>(</symbol>
                                                                    <expression>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>divLengthx,int,local,2</identifier>
                                                                            </varName>
                                                                        </term>
                                                                        <symbol>*</symbol>
                                                                        <term>
                                                                            <integerConstant>25</integerConstant>
                                                                        </term>
                                                                    </expression>
                                                                    <symbol>)</symbol>
                                                                </term>
                                                                <symbol>/</symbol>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>divLengthy,int,local,3</identifier>
                                                                    </varName>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                    <statement>
                                                        <letStatement>
                                                            <keyword>let</keyword>
                                                            <varName>
                                                                <identifier>newx,int,local,0</identifier>
                                                            </varName>
                                                            <symbol>=</symbol>
                                                            <expression>
                                                                <term>
                                                                    <varName>
                                                                        <identifier>x,int,this,0</identifier>
                                                                    </varName>
                                                                </term>
                                                                <symbol>+</symbol>
                                                                <term>
                                                                    <symbol>(</symbol>
                                                                    <expression>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>newx,int,local,0</identifier>
                                                                            </varName>
                                                                        </term>
                                                                        <symbol>*</symbol>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>factor,int,local,4</identifier>
                                                                            </varName>
                                                                        </term>
                                                                    </expression>
                                                                    <symbol>)</symbol>
                                                                </term>
                                                            </expression>
                                                            <symbol>;</symbol>
                                                        </letStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                            </ifStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                </ifStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <subroutineName>
                            <identifier>setDestination</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>newx,int,local,0</identifier>
                                    </varName>
                                </term>
                            </expression>
                            <symbol>,</symbol>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>newy,int,local,1</identifier>
                                    </varName>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <symbol>}</symbol>
</class>
