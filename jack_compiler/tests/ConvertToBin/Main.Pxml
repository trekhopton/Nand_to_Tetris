<class>
    <keyword>class</keyword>
    <className>
        <identifier>Main</identifier>
    </className>
    <symbol>{</symbol>
    <subroutineDec>
        <keyword>function</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>main</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <type>
                    <keyword>int</keyword>
                </type>
                <varName>
                    <identifier>result</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>value</identifier>
                </varName>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <className>
                            <identifier>Main</identifier>
                        </className>
                        <symbol>.</symbol>
                        <subroutineName>
                            <identifier>fillMemory</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <integerConstant>8001</integerConstant>
                                </term>
                            </expression>
                            <symbol>,</symbol>
                            <expression>
                                <term>
                                    <integerConstant>16</integerConstant>
                                </term>
                            </expression>
                            <symbol>,</symbol>
                            <expression>
                                <term>
                                    <symbol>-</symbol>
                                    <term>
                                        <integerConstant>1</integerConstant>
                                    </term>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>value</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <className>
                                    <identifier>Memory</identifier>
                                </className>
                                <symbol>.</symbol>
                                <subroutineName>
                                    <identifier>peek</identifier>
                                </subroutineName>
                                <symbol>(</symbol>
                                <expressionList>
                                    <expression>
                                        <term>
                                            <integerConstant>8000</integerConstant>
                                        </term>
                                    </expression>
                                </expressionList>
                                <symbol>)</symbol>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <doStatement>
                        <keyword>do</keyword>
                        <className>
                            <identifier>Main</identifier>
                        </className>
                        <symbol>.</symbol>
                        <subroutineName>
                            <identifier>convert</identifier>
                        </subroutineName>
                        <symbol>(</symbol>
                        <expressionList>
                            <expression>
                                <term>
                                    <varName>
                                        <identifier>value</identifier>
                                    </varName>
                                </term>
                            </expression>
                        </expressionList>
                        <symbol>)</symbol>
                        <symbol>;</symbol>
                    </doStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>function</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>convert</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>value</identifier>
            </varName>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <type>
                    <keyword>int</keyword>
                </type>
                <varName>
                    <identifier>mask</identifier>
                </varName>
                <symbol>,</symbol>
                <varName>
                    <identifier>position</identifier>
                </varName>
                <symbol>;</symbol>
            </varDec>
            <varDec>
                <keyword>var</keyword>
                <type>
                    <keyword>boolean</keyword>
                </type>
                <varName>
                    <identifier>loop</identifier>
                </varName>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <statement>
                    <letStatement>
                        <keyword>let</keyword>
                        <varName>
                            <identifier>loop</identifier>
                        </varName>
                        <symbol>=</symbol>
                        <expression>
                            <term>
                                <keyword>true</keyword>
                            </term>
                        </expression>
                        <symbol>;</symbol>
                    </letStatement>
                </statement>
                <statement>
                    <whileStatement>
                        <keyword>while</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>loop</identifier>
                                </varName>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>position</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>position</identifier>
                                            </varName>
                                        </term>
                                        <symbol>+</symbol>
                                        <term>
                                            <integerConstant>1</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>mask</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <className>
                                                <identifier>Main</identifier>
                                            </className>
                                            <symbol>.</symbol>
                                            <subroutineName>
                                                <identifier>nextMask</identifier>
                                            </subroutineName>
                                            <symbol>(</symbol>
                                            <expressionList>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>mask</identifier>
                                                        </varName>
                                                    </term>
                                                </expression>
                                            </expressionList>
                                            <symbol>)</symbol>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <doStatement>
                                    <keyword>do</keyword>
                                    <className>
                                        <identifier>Memory</identifier>
                                    </className>
                                    <symbol>.</symbol>
                                    <subroutineName>
                                        <identifier>poke</identifier>
                                    </subroutineName>
                                    <symbol>(</symbol>
                                    <expressionList>
                                        <expression>
                                            <term>
                                                <integerConstant>9000</integerConstant>
                                            </term>
                                            <symbol>+</symbol>
                                            <term>
                                                <varName>
                                                    <identifier>position</identifier>
                                                </varName>
                                            </term>
                                        </expression>
                                        <symbol>,</symbol>
                                        <expression>
                                            <term>
                                                <varName>
                                                    <identifier>mask</identifier>
                                                </varName>
                                            </term>
                                        </expression>
                                    </expressionList>
                                    <symbol>)</symbol>
                                    <symbol>;</symbol>
                                </doStatement>
                            </statement>
                            <statement>
                                <ifStatement>
                                    <keyword>if</keyword>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <symbol>~</symbol>
                                            <term>
                                                <symbol>(</symbol>
                                                <expression>
                                                    <term>
                                                        <varName>
                                                            <identifier>position</identifier>
                                                        </varName>
                                                    </term>
                                                    <symbol>&gt;</symbol>
                                                    <term>
                                                        <integerConstant>16</integerConstant>
                                                    </term>
                                                </expression>
                                                <symbol>)</symbol>
                                            </term>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <ifStatement>
                                                <keyword>if</keyword>
                                                <symbol>(</symbol>
                                                <expression>
                                                    <term>
                                                        <symbol>~</symbol>
                                                        <term>
                                                            <symbol>(</symbol>
                                                            <expression>
                                                                <term>
                                                                    <symbol>(</symbol>
                                                                    <expression>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>value</identifier>
                                                                            </varName>
                                                                        </term>
                                                                        <symbol>&amp;</symbol>
                                                                        <term>
                                                                            <varName>
                                                                                <identifier>mask</identifier>
                                                                            </varName>
                                                                        </term>
                                                                    </expression>
                                                                    <symbol>)</symbol>
                                                                </term>
                                                                <symbol>=</symbol>
                                                                <term>
                                                                    <integerConstant>0</integerConstant>
                                                                </term>
                                                            </expression>
                                                            <symbol>)</symbol>
                                                        </term>
                                                    </term>
                                                </expression>
                                                <symbol>)</symbol>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <doStatement>
                                                            <keyword>do</keyword>
                                                            <className>
                                                                <identifier>Memory</identifier>
                                                            </className>
                                                            <symbol>.</symbol>
                                                            <subroutineName>
                                                                <identifier>poke</identifier>
                                                            </subroutineName>
                                                            <symbol>(</symbol>
                                                            <expressionList>
                                                                <expression>
                                                                    <term>
                                                                        <integerConstant>8000</integerConstant>
                                                                    </term>
                                                                    <symbol>+</symbol>
                                                                    <term>
                                                                        <varName>
                                                                            <identifier>position</identifier>
                                                                        </varName>
                                                                    </term>
                                                                </expression>
                                                                <symbol>,</symbol>
                                                                <expression>
                                                                    <term>
                                                                        <integerConstant>1</integerConstant>
                                                                    </term>
                                                                </expression>
                                                            </expressionList>
                                                            <symbol>)</symbol>
                                                            <symbol>;</symbol>
                                                        </doStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                                <keyword>else</keyword>
                                                <symbol>{</symbol>
                                                <statements>
                                                    <statement>
                                                        <doStatement>
                                                            <keyword>do</keyword>
                                                            <className>
                                                                <identifier>Memory</identifier>
                                                            </className>
                                                            <symbol>.</symbol>
                                                            <subroutineName>
                                                                <identifier>poke</identifier>
                                                            </subroutineName>
                                                            <symbol>(</symbol>
                                                            <expressionList>
                                                                <expression>
                                                                    <term>
                                                                        <integerConstant>8000</integerConstant>
                                                                    </term>
                                                                    <symbol>+</symbol>
                                                                    <term>
                                                                        <varName>
                                                                            <identifier>position</identifier>
                                                                        </varName>
                                                                    </term>
                                                                </expression>
                                                                <symbol>,</symbol>
                                                                <expression>
                                                                    <term>
                                                                        <integerConstant>0</integerConstant>
                                                                    </term>
                                                                </expression>
                                                            </expressionList>
                                                            <symbol>)</symbol>
                                                            <symbol>;</symbol>
                                                        </doStatement>
                                                    </statement>
                                                </statements>
                                                <symbol>}</symbol>
                                            </ifStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                    <keyword>else</keyword>
                                    <symbol>{</symbol>
                                    <statements>
                                        <statement>
                                            <letStatement>
                                                <keyword>let</keyword>
                                                <varName>
                                                    <identifier>loop</identifier>
                                                </varName>
                                                <symbol>=</symbol>
                                                <expression>
                                                    <term>
                                                        <keyword>false</keyword>
                                                    </term>
                                                </expression>
                                                <symbol>;</symbol>
                                            </letStatement>
                                        </statement>
                                    </statements>
                                    <symbol>}</symbol>
                                </ifStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </whileStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>function</keyword>
        <type>
            <keyword>int</keyword>
        </type>
        <subroutineName>
            <identifier>nextMask</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>mask</identifier>
            </varName>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <ifStatement>
                        <keyword>if</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>mask</identifier>
                                </varName>
                            </term>
                            <symbol>=</symbol>
                            <term>
                                <integerConstant>0</integerConstant>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <returnStatement>
                                    <keyword>return</keyword>
                                    <expression>
                                        <term>
                                            <integerConstant>1</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </returnStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                        <keyword>else</keyword>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <returnStatement>
                                    <keyword>return</keyword>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>mask</identifier>
                                            </varName>
                                        </term>
                                        <symbol>*</symbol>
                                        <term>
                                            <integerConstant>2</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </returnStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </ifStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>function</keyword>
        <keyword>void</keyword>
        <subroutineName>
            <identifier>fillMemory</identifier>
        </subroutineName>
        <symbol>(</symbol>
        <parameterList>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>startAddress</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>length</identifier>
            </varName>
            <symbol>,</symbol>
            <type>
                <keyword>int</keyword>
            </type>
            <varName>
                <identifier>value</identifier>
            </varName>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <statement>
                    <whileStatement>
                        <keyword>while</keyword>
                        <symbol>(</symbol>
                        <expression>
                            <term>
                                <varName>
                                    <identifier>length</identifier>
                                </varName>
                            </term>
                            <symbol>&gt;</symbol>
                            <term>
                                <integerConstant>0</integerConstant>
                            </term>
                        </expression>
                        <symbol>)</symbol>
                        <symbol>{</symbol>
                        <statements>
                            <statement>
                                <doStatement>
                                    <keyword>do</keyword>
                                    <className>
                                        <identifier>Memory</identifier>
                                    </className>
                                    <symbol>.</symbol>
                                    <subroutineName>
                                        <identifier>poke</identifier>
                                    </subroutineName>
                                    <symbol>(</symbol>
                                    <expressionList>
                                        <expression>
                                            <term>
                                                <varName>
                                                    <identifier>startAddress</identifier>
                                                </varName>
                                            </term>
                                        </expression>
                                        <symbol>,</symbol>
                                        <expression>
                                            <term>
                                                <varName>
                                                    <identifier>value</identifier>
                                                </varName>
                                            </term>
                                        </expression>
                                    </expressionList>
                                    <symbol>)</symbol>
                                    <symbol>;</symbol>
                                </doStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>length</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>length</identifier>
                                            </varName>
                                        </term>
                                        <symbol>-</symbol>
                                        <term>
                                            <integerConstant>1</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                            <statement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <varName>
                                        <identifier>startAddress</identifier>
                                    </varName>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <varName>
                                                <identifier>startAddress</identifier>
                                            </varName>
                                        </term>
                                        <symbol>+</symbol>
                                        <term>
                                            <integerConstant>1</integerConstant>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statement>
                        </statements>
                        <symbol>}</symbol>
                    </whileStatement>
                </statement>
                <statement>
                    <returnStatement>
                        <keyword>return</keyword>
                        <symbol>;</symbol>
                    </returnStatement>
                </statement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <symbol>}</symbol>
</class>
